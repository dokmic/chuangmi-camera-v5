#!/bin/sh
## purpose: Restore led and image state after reboot
## license: GPLv3+, http://www.gnu.org/licenses/gpl-3.0.html
## author: Flip Hess, 2019

SD_MOUNTDIR="/tmp/sd"
if [ -r "${SD_MOUNTDIR}/firmware/scripts/functions.sh" ]
then
    . "${SD_MOUNTDIR}/firmware/scripts/functions.sh"
else
    echo "Unable to load basic functions"
    exit 1
fi

STATEFILE="$SD_MOUNTDIR/firmware/etc/restore_state.db"

startup()
{
    echo "*** Restoring led and image settings from ${STATEFILE}"

    if [ ! -f "$STATEFILE" ]
    then
        echo "*** ERROR: Statefile $STATEFILE not found!"
        exit 1
    fi

    . "${STATEFILE}" || die "Failed to source ${STATEFILE}"

    [ "${BLUE_LED}" = "on"  ] && blue_led --enable
    [ "${BLUE_LED}" = "off" ] && blue_led --disable

    [ "${YELLOW_LED}" = "on"  ] && yellow_led --enable
    [ "${YELLOW_LED}" = "off" ] && yellow_led --disable

    [ "${IR_CUT}" = "on"  ] && ir_cut --enable
    [ "${IR_CUT}" = "off" ] && ir_cut --disable

    if [ "${AUTO_NIGHT_MODE}" -eq 0 ]
    then
        [ "${IR_LED}" = "on"  ] && ir_led --enable
        [ "${IR_LED}" = "off" ] && ir_led --disable

        [ "${NIGHT_MODE}"  = "on"  ] && nightmode --enable
        [ "${NIGHT_MODE}"  = "off" ] && nightmode --disable
    fi

    if [ "${CEILING_MODE}" -eq 0 ]
    then
        [ "${FLIP_MODE}"   = "on"  ] && flipmode --enable
        [ "${FLIP_MODE}"   = "off" ] && flipmode --disable

        [ "${MIRROR_MODE}" = "on"  ] && mirrormode --enable
        [ "${MIRROR_MODE}" = "off" ] && mirrormode --disable
    fi

    [ "${BRIGHTNESS}" ] && camera_adjust -t brightness -s "${BRIGHTNESS}"
    [ "${CONTRAST}"   ] && camera_adjust -t contrast   -s "${CONTRAST}"
    [ "${HUE}"        ] && camera_adjust -t hue        -s "${HUE}"
    [ "${SATURATION}" ] && camera_adjust -t saturation -s "${SATURATION}"
    [ "${DENOISE}"    ] && camera_adjust -t denoise    -s "${DENOISE}"
    [ "${SHARPNESS}"  ] && camera_adjust -t sharpness  -s "${SHARPNESS}"

}

##
## Save the state of the leds and the camera settings to file
##

save_state()
{
    echo "*** Saving settings for leds and image configuration"
    camera_adjust -k > /tmp/sd/firmware/etc/restore_state.db
    mode_status --shell >> /tmp/sd/firmware/etc/restore_state.db
    led_status  --shell >> /tmp/sd/firmware/etc/restore_state.db
}


##
## Arbiter
##

case "$1" in
    start)
        startup
    ;;
    save)
        save_state
    ;;
    *)
      echo "Usage: $0 {start|save}"
      exit 1
    ;;
esac

exit $?

